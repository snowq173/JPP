-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParSollang.y
-----------------------------------------------------------------------------


rule 6 is unused
rule 7 is unused
rule 8 is unused
rule 9 is unused
rule 27 is unused
rule 28 is unused
rule 29 is unused
rule 46 is unused
rule 47 is unused
rule 48 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> GlobalVarsDecl ListFnDef                (4)
	GlobalVarsDecl -> 'vars' '{' ListDecl '}'          (5)
	GlobalVarDecl -> Type Ident                        (6)
	ListGlobalVarDecl ->                               (7)
	ListGlobalVarDecl -> GlobalVarDecl                 (8)
	ListGlobalVarDecl -> GlobalVarDecl ';' ListGlobalVarDecl   (9)
	FnDef -> 'function' Type Ident '(' ListArg ')' FBody   (10)
	ListFnDef ->                                       (11)
	ListFnDef -> FnDef ListFnDef                       (12)
	Arg -> ArgPass Ident                               (13)
	ArgPass -> Type                                    (14)
	ArgPass -> Type '&'                                (15)
	ListArg ->                                         (16)
	ListArg -> Arg                                     (17)
	ListArg -> Arg ',' ListArg                         (18)
	FReturn -> 'return' ';'                            (19)
	FReturn -> 'return' Expr ';'                       (20)
	FBody -> '{' ListDecl ListFnDef ListStmt FReturn '}'   (21)
	Block -> '{' ListDecl ListStmt '}'                 (22)
	Decl -> Type Ident ';'                             (23)
	Decl -> Type Ident '=' Expr ';'                    (24)
	ListDecl ->                                        (25)
	ListDecl -> Decl ListDecl                          (26)
	LocalFnDef -> 'function' Type Ident '(' ListArg ')' FBody   (27)
	ListLocalFnDef ->                                  (28)
	ListLocalFnDef -> LocalFnDef ListLocalFnDef        (29)
	ListStmt ->                                        (30)
	ListStmt -> Stmt ListStmt                          (31)
	Stmt -> Ident '=' Expr ';'                         (32)
	Stmt -> 'continue' ';'                             (33)
	Stmt -> 'break' ';'                                (34)
	Stmt -> 'print' Expr ';'                           (35)
	Stmt -> Ident '++' ';'                             (36)
	Stmt -> Ident '--' ';'                             (37)
	Stmt -> 'if' '(' Expr ')' Block                    (38)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (39)
	Stmt -> 'while' '(' Expr ')' Block                 (40)
	Stmt -> Expr ';'                                   (41)
	Type -> 'int'                                      (42)
	Type -> 'string'                                   (43)
	Type -> 'boolean'                                  (44)
	Type -> 'void'                                     (45)
	ListType ->                                        (46)
	ListType -> Type                                   (47)
	ListType -> Type ',' ListType                      (48)
	Expr6 -> Ident                                     (49)
	Expr6 -> Integer                                   (50)
	Expr6 -> 'true'                                    (51)
	Expr6 -> 'false'                                   (52)
	Expr6 -> Ident '(' ListExpr ')'                    (53)
	Expr6 -> String                                    (54)
	Expr6 -> '(' Expr ')'                              (55)
	Expr5 -> '-' Expr6                                 (56)
	Expr5 -> '!' Expr6                                 (57)
	Expr5 -> Expr6                                     (58)
	Expr4 -> Expr4 MulOp Expr5                         (59)
	Expr4 -> Expr5                                     (60)
	Expr3 -> Expr3 AddOp Expr4                         (61)
	Expr3 -> Expr4                                     (62)
	Expr2 -> Expr2 RelOp Expr3                         (63)
	Expr2 -> Expr3                                     (64)
	Expr1 -> Expr2 '&&' Expr1                          (65)
	Expr1 -> Expr2                                     (66)
	Expr -> Expr1 '||' Expr                            (67)
	Expr -> Expr1                                      (68)
	ListExpr ->                                        (69)
	ListExpr -> Expr                                   (70)
	ListExpr -> Expr ',' ListExpr                      (71)
	AddOp -> '+'                                       (72)
	AddOp -> '-'                                       (73)
	MulOp -> '*'                                       (74)
	MulOp -> '/'                                       (75)
	MulOp -> '%'                                       (76)
	RelOp -> '<'                                       (77)
	RelOp -> '<='                                      (78)
	RelOp -> '>'                                       (79)
	RelOp -> '>='                                      (80)
	RelOp -> '=='                                      (81)
	RelOp -> '!='                                      (82)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'boolean'      { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'continue'     { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'function'     { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'print'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'vars'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	GlobalVarsDecl  rule  5
	GlobalVarDecl   rule  6
	ListGlobalVarDecl rules 7, 8, 9
	FnDef           rule  10
	ListFnDef       rules 11, 12
	Arg             rule  13
	ArgPass         rules 14, 15
	ListArg         rules 16, 17, 18
	FReturn         rules 19, 20
	FBody           rule  21
	Block           rule  22
	Decl            rules 23, 24
	ListDecl        rules 25, 26
	LocalFnDef      rule  27
	ListLocalFnDef  rules 28, 29
	ListStmt        rules 30, 31
	Stmt            rules 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
	Type            rules 42, 43, 44, 45
	ListType        rules 46, 47, 48
	Expr6           rules 49, 50, 51, 52, 53, 54, 55
	Expr5           rules 56, 57, 58
	Expr4           rules 59, 60
	Expr3           rules 61, 62
	Expr2           rules 63, 64
	Expr1           rules 65, 66
	Expr            rules 67, 68
	ListExpr        rules 69, 70, 71
	AddOp           rules 72, 73
	MulOp           rules 74, 75, 76
	RelOp           rules 77, 78, 79, 80, 81, 82

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'vars'         shift, and enter state 5

	Program        goto state 3
	GlobalVarsDecl goto state 4

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	Program -> GlobalVarsDecl . ListFnDef               (rule 4)

	'function'     shift, and enter state 9
	%eof           reduce using rule 11

	FnDef          goto state 7
	ListFnDef      goto state 8

State 5

	GlobalVarsDecl -> 'vars' . '{' ListDecl '}'         (rule 5)

	'{'            shift, and enter state 6


State 6

	GlobalVarsDecl -> 'vars' '{' . ListDecl '}'         (rule 5)

	'boolean'      shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            reduce using rule 25

	Decl           goto state 16
	ListDecl       goto state 17
	Type           goto state 18

State 7

	ListFnDef -> FnDef . ListFnDef                      (rule 12)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'function'     shift, and enter state 9
	'if'           reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11

	FnDef          goto state 7
	ListFnDef      goto state 15

State 8

	Program -> GlobalVarsDecl ListFnDef .               (rule 4)

	%eof           reduce using rule 4


State 9

	FnDef -> 'function' . Type Ident '(' ListArg ')' FBody    (rule 10)

	'boolean'      shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14

	Type           goto state 10

State 10

	FnDef -> 'function' Type . Ident '(' ListArg ')' FBody    (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 22

State 11

	Type -> 'boolean' .                                 (rule 44)

	'&'            reduce using rule 44
	L_Ident        reduce using rule 44


State 12

	Type -> 'int' .                                     (rule 42)

	'&'            reduce using rule 42
	L_Ident        reduce using rule 42


State 13

	Type -> 'string' .                                  (rule 43)

	'&'            reduce using rule 43
	L_Ident        reduce using rule 43


State 14

	Type -> 'void' .                                    (rule 45)

	'&'            reduce using rule 45
	L_Ident        reduce using rule 45


State 15

	ListFnDef -> FnDef ListFnDef .                      (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 16

	ListDecl -> Decl . ListDecl                         (rule 26)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	'boolean'      shift, and enter state 11
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'function'     reduce using rule 25
	'if'           reduce using rule 25
	'int'          shift, and enter state 12
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       shift, and enter state 13
	'true'         reduce using rule 25
	'void'         shift, and enter state 14
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25

	Decl           goto state 16
	ListDecl       goto state 21
	Type           goto state 18

State 17

	GlobalVarsDecl -> 'vars' '{' ListDecl . '}'         (rule 5)

	'}'            shift, and enter state 20


State 18

	Decl -> Type . Ident ';'                            (rule 23)
	Decl -> Type . Ident '=' Expr ';'                   (rule 24)

	L_Ident        shift, and enter state 2

	Ident          goto state 19

State 19

	Decl -> Type Ident . ';'                            (rule 23)
	Decl -> Type Ident . '=' Expr ';'                   (rule 24)

	';'            shift, and enter state 24
	'='            shift, and enter state 25


State 20

	GlobalVarsDecl -> 'vars' '{' ListDecl '}' .         (rule 5)

	'function'     reduce using rule 5
	%eof           reduce using rule 5


State 21

	ListDecl -> Decl ListDecl .                         (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'function'     reduce using rule 26
	'if'           reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 22

	FnDef -> 'function' Type Ident . '(' ListArg ')' FBody    (rule 10)

	'('            shift, and enter state 23


State 23

	FnDef -> 'function' Type Ident '(' . ListArg ')' FBody    (rule 10)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14

	Arg            goto state 43
	ArgPass        goto state 44
	ListArg        goto state 45
	Type           goto state 46

State 24

	Decl -> Type Ident ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'function'     reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 25

	Decl -> Type Ident '=' . Expr ';'                   (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35

State 26

	Expr6 -> Ident .                                    (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 71
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 27

	Expr6 -> Integer .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 28

	Expr6 -> String .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 29

	Expr5 -> Expr6 .                                    (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 30

	Expr4 -> Expr5 .                                    (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 31

	Expr4 -> Expr4 . MulOp Expr5                        (rule 59)
	Expr3 -> Expr4 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            shift, and enter state 68
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 69
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 70
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62

	MulOp          goto state 67

State 32

	Expr3 -> Expr3 . AddOp Expr4                        (rule 61)
	Expr2 -> Expr3 .                                    (rule 64)

	'!='           reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 65
	','            reduce using rule 64
	'-'            shift, and enter state 66
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	AddOp          goto state 64

State 33

	Expr2 -> Expr2 . RelOp Expr3                        (rule 63)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 65)
	Expr1 -> Expr2 .                                    (rule 66)

	'!='           shift, and enter state 57
	'&&'           shift, and enter state 58
	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	'<'            shift, and enter state 59
	'<='           shift, and enter state 60
	'=='           shift, and enter state 61
	'>'            shift, and enter state 62
	'>='           shift, and enter state 63
	'||'           reduce using rule 66

	RelOp          goto state 56

State 34

	Expr -> Expr1 . '||' Expr                           (rule 67)
	Expr -> Expr1 .                                     (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'||'           shift, and enter state 55


State 35

	Decl -> Type Ident '=' Expr . ';'                   (rule 24)

	';'            shift, and enter state 54


State 36

	Expr5 -> '!' . Expr6                                (rule 57)

	'('            shift, and enter state 37
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 53

State 37

	Expr6 -> '(' . Expr ')'                             (rule 55)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 52

State 38

	Expr5 -> '-' . Expr6                                (rule 56)

	'('            shift, and enter state 37
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 51

State 39

	Expr6 -> 'false' .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 40

	Expr6 -> 'true' .                                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 41

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 42

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 43

	ListArg -> Arg .                                    (rule 17)
	ListArg -> Arg . ',' ListArg                        (rule 18)

	')'            reduce using rule 17
	','            shift, and enter state 50


State 44

	Arg -> ArgPass . Ident                              (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 49

State 45

	FnDef -> 'function' Type Ident '(' ListArg . ')' FBody    (rule 10)

	')'            shift, and enter state 48


State 46

	ArgPass -> Type .                                   (rule 14)
	ArgPass -> Type . '&'                               (rule 15)

	'&'            shift, and enter state 47
	L_Ident        reduce using rule 14


State 47

	ArgPass -> Type '&' .                               (rule 15)

	L_Ident        reduce using rule 15


State 48

	FnDef -> 'function' Type Ident '(' ListArg ')' . FBody    (rule 10)

	'{'            shift, and enter state 82

	FBody          goto state 81

State 49

	Arg -> ArgPass Ident .                              (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 50

	ListArg -> Arg ',' . ListArg                        (rule 18)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14

	Arg            goto state 43
	ArgPass        goto state 44
	ListArg        goto state 80
	Type           goto state 46

State 51

	Expr5 -> '-' Expr6 .                                (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 52

	Expr6 -> '(' Expr . ')'                             (rule 55)

	')'            shift, and enter state 79


State 53

	Expr5 -> '!' Expr6 .                                (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 54

	Decl -> Type Ident '=' Expr ';' .                   (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'function'     reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 55

	Expr -> Expr1 '||' . Expr                           (rule 67)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 78

State 56

	Expr2 -> Expr2 RelOp . Expr3                        (rule 63)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 77

State 57

	RelOp -> '!=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 58

	Expr1 -> Expr2 '&&' . Expr1                         (rule 65)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 76

State 59

	RelOp -> '<' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 60

	RelOp -> '<=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 61

	RelOp -> '==' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 62

	RelOp -> '>' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 63

	RelOp -> '>=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 64

	Expr3 -> Expr3 AddOp . Expr4                        (rule 61)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 75

State 65

	AddOp -> '+' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 66

	AddOp -> '-' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 67

	Expr4 -> Expr4 MulOp . Expr5                        (rule 59)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 74

State 68

	MulOp -> '%' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 69

	MulOp -> '*' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 70

	MulOp -> '/' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 71

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 53)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 69
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 72
	ListExpr       goto state 73

State 72

	ListExpr -> Expr .                                  (rule 70)
	ListExpr -> Expr . ',' ListExpr                     (rule 71)

	')'            reduce using rule 70
	','            shift, and enter state 85


State 73

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 53)

	')'            shift, and enter state 84


State 74

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 75

	Expr4 -> Expr4 . MulOp Expr5                        (rule 59)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 61)

	'!='           reduce using rule 61
	'%'            shift, and enter state 68
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 69
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 70
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61

	MulOp          goto state 67

State 76

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'||'           reduce using rule 65


State 77

	Expr3 -> Expr3 . AddOp Expr4                        (rule 61)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 63)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 65
	','            reduce using rule 63
	'-'            shift, and enter state 66
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63

	AddOp          goto state 64

State 78

	Expr -> Expr1 '||' Expr .                           (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67


State 79

	Expr6 -> '(' Expr ')' .                             (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 80

	ListArg -> Arg ',' ListArg .                        (rule 18)

	')'            reduce using rule 18


State 81

	FnDef -> 'function' Type Ident '(' ListArg ')' FBody .    (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'function'     reduce using rule 10
	'if'           reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'while'        reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 82

	FBody -> '{' . ListDecl ListFnDef ListStmt FReturn '}'    (rule 21)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	'boolean'      shift, and enter state 11
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'function'     reduce using rule 25
	'if'           reduce using rule 25
	'int'          shift, and enter state 12
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       shift, and enter state 13
	'true'         reduce using rule 25
	'void'         shift, and enter state 14
	'while'        reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25

	Decl           goto state 16
	ListDecl       goto state 83
	Type           goto state 18

State 83

	FBody -> '{' ListDecl . ListFnDef ListStmt FReturn '}'    (rule 21)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'function'     shift, and enter state 9
	'if'           reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11

	FnDef          goto state 7
	ListFnDef      goto state 87

State 84

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 85

	ListExpr -> Expr ',' . ListExpr                     (rule 71)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 69
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 72
	ListExpr       goto state 86

State 86

	ListExpr -> Expr ',' ListExpr .                     (rule 71)

	')'            reduce using rule 71


State 87

	FBody -> '{' ListDecl ListFnDef . ListStmt FReturn '}'    (rule 21)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'false'        shift, and enter state 39
	'if'           shift, and enter state 94
	'print'        shift, and enter state 95
	'return'       reduce using rule 30
	'true'         shift, and enter state 40
	'while'        shift, and enter state 96
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 88
	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 89
	Stmt           goto state 90
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 88

	Stmt -> Ident . '=' Expr ';'                        (rule 32)
	Stmt -> Ident . '++' ';'                            (rule 36)
	Stmt -> Ident . '--' ';'                            (rule 37)
	Expr6 -> Ident .                                    (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 71
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           shift, and enter state 106
	'-'            reduce using rule 49
	'--'           shift, and enter state 107
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            shift, and enter state 108
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 89

	FBody -> '{' ListDecl ListFnDef ListStmt . FReturn '}'    (rule 21)

	'return'       shift, and enter state 105

	FReturn        goto state 104

State 90

	ListStmt -> Stmt . ListStmt                         (rule 31)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'false'        shift, and enter state 39
	'if'           shift, and enter state 94
	'print'        shift, and enter state 95
	'return'       reduce using rule 30
	'true'         shift, and enter state 40
	'while'        shift, and enter state 96
	'}'            reduce using rule 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 88
	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 103
	Stmt           goto state 90
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 91

	Stmt -> Expr . ';'                                  (rule 41)

	';'            shift, and enter state 102


State 92

	Stmt -> 'break' . ';'                               (rule 34)

	';'            shift, and enter state 101


State 93

	Stmt -> 'continue' . ';'                            (rule 33)

	';'            shift, and enter state 100


State 94

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 38)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 39)

	'('            shift, and enter state 99


State 95

	Stmt -> 'print' . Expr ';'                          (rule 35)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 98

State 96

	Stmt -> 'while' . '(' Expr ')' Block                (rule 40)

	'('            shift, and enter state 97


State 97

	Stmt -> 'while' '(' . Expr ')' Block                (rule 40)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 117

State 98

	Stmt -> 'print' Expr . ';'                          (rule 35)

	';'            shift, and enter state 116


State 99

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 38)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 39)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 115

State 100

	Stmt -> 'continue' ';' .                            (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'print'        reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 101

	Stmt -> 'break' ';' .                               (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 102

	Stmt -> Expr ';' .                                  (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'false'        reduce using rule 41
	'if'           reduce using rule 41
	'print'        reduce using rule 41
	'return'       reduce using rule 41
	'true'         reduce using rule 41
	'while'        reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


State 103

	ListStmt -> Stmt ListStmt .                         (rule 31)

	'return'       reduce using rule 31
	'}'            reduce using rule 31


State 104

	FBody -> '{' ListDecl ListFnDef ListStmt FReturn . '}'    (rule 21)

	'}'            shift, and enter state 114


State 105

	FReturn -> 'return' . ';'                           (rule 19)
	FReturn -> 'return' . Expr ';'                      (rule 20)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 113
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 112

State 106

	Stmt -> Ident '++' . ';'                            (rule 36)

	';'            shift, and enter state 111


State 107

	Stmt -> Ident '--' . ';'                            (rule 37)

	';'            shift, and enter state 110


State 108

	Stmt -> Ident '=' . Expr ';'                        (rule 32)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 109

State 109

	Stmt -> Ident '=' Expr . ';'                        (rule 32)

	';'            shift, and enter state 121


State 110

	Stmt -> Ident '--' ';' .                            (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'print'        reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'while'        reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 111

	Stmt -> Ident '++' ';' .                            (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'print'        reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'while'        reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 112

	FReturn -> 'return' Expr . ';'                      (rule 20)

	';'            shift, and enter state 120


State 113

	FReturn -> 'return' ';' .                           (rule 19)

	'}'            reduce using rule 19


State 114

	FBody -> '{' ListDecl ListFnDef ListStmt FReturn '}' .    (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'function'     reduce using rule 21
	'if'           reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 115

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 38)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 39)

	')'            shift, and enter state 119


State 116

	Stmt -> 'print' Expr ';' .                          (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'print'        reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 117

	Stmt -> 'while' '(' Expr . ')' Block                (rule 40)

	')'            shift, and enter state 118


State 118

	Stmt -> 'while' '(' Expr ')' . Block                (rule 40)

	'{'            shift, and enter state 123

	Block          goto state 124

State 119

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 38)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 39)

	'{'            shift, and enter state 123

	Block          goto state 122

State 120

	FReturn -> 'return' Expr ';' .                      (rule 20)

	'}'            reduce using rule 20


State 121

	Stmt -> Ident '=' Expr ';' .                        (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 122

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 38)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 39)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'else'         shift, and enter state 126
	'false'        reduce using rule 38
	'if'           reduce using rule 38
	'print'        reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'while'        reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 123

	Block -> '{' . ListDecl ListStmt '}'                (rule 22)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	'boolean'      shift, and enter state 11
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          shift, and enter state 12
	'print'        reduce using rule 25
	'string'       shift, and enter state 13
	'true'         reduce using rule 25
	'void'         shift, and enter state 14
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25

	Decl           goto state 16
	ListDecl       goto state 125
	Type           goto state 18

State 124

	Stmt -> 'while' '(' Expr ')' Block .                (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'false'        reduce using rule 40
	'if'           reduce using rule 40
	'print'        reduce using rule 40
	'return'       reduce using rule 40
	'true'         reduce using rule 40
	'while'        reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 125

	Block -> '{' ListDecl . ListStmt '}'                (rule 22)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'false'        shift, and enter state 39
	'if'           shift, and enter state 94
	'print'        shift, and enter state 95
	'true'         shift, and enter state 40
	'while'        shift, and enter state 96
	'}'            reduce using rule 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 88
	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 128
	Stmt           goto state 90
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 126

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 39)

	'{'            shift, and enter state 123

	Block          goto state 127

State 127

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'print'        reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'while'        reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 128

	Block -> '{' ListDecl ListStmt . '}'                (rule 22)

	'}'            shift, and enter state 129


State 129

	Block -> '{' ListDecl ListStmt '}' .                (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 83
Number of terminals: 42
Number of non-terminals: 35
Number of states: 130
